<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:include filename="inertial_macros.xacro"/>
    <xacro:include filename ="mech/mecanum_wheel.urdf.xacro"/>
    <xacro:include filename = "sensor/lidar.xacro"/>


    <!-- Color setting-->
    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>

    <!-- BASE LINK -->

    <link name="base_link">

    </link>


    <!-- CHASSIS LINK -->


    <!--setting for pynqcar_chassis -->
    <!-- ======================================================================= -->
    <!-- origin, size, mass of pynqcar chassis -->
    <xacro:property name="chassis_origin" value="0.25 0 0.1" />   <!--移動機殼 讓base_link在車身中央之底部 同樣地，chassis之origin也在底部 所以x跟z分別往前和往上移動size的一半-->
    <xacro:property name="chassis_size_x" value="0.5"/>
    <xacro:property name="chassis_size_y" value="0.3"/>
    <xacro:property name="chassis_size_z" value="0.15"/>
    <xacro:property name="chassis_geometry" value="${chassis_size_x} ${chassis_size_y} ${chassis_size_z}" />  <!--大致估測整個機殼大小，我認為z方向應該不是重點-->
    <xacro:property name="chassis_mass" value="0.5" />
    <xacro:property name="chassis_massx" value="0.5" />
    <xacro:property name="chassis_massy" value="0.3" />
    <xacro:property name="chassis_massz" value="0.15" />
    <!--======================================================================= -->
    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="-0.25 0 0"/>    <!--希望機殼的origin 在baselink的後方 使得baselink正好在車身正中央 那麼x值應為機殼大小x值之一半-->
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="${chassis_origin}"/>
            <geometry>
                <box size="${chassis_geometry}"/>
            </geometry>
            <material name="orange"/>
        </visual>
        <collision>
            <origin xyz="${chassis_origin}"/>
            <geometry>
                <box size="${chassis_geometry}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="${chassis_mass}" x="${chassis_massx}" y="${chassis_massy}" z="${chassis_massz}">
            <origin xyz="${chassis_origin}" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>
    
    <gazebo reference="chassis">
        <material>
            Gazebo/Orange
        </material>
    </gazebo>

    <!--setting for pynqcar_wheel -->
    <!-- ======================================================================= -->
    <!--
        pynqcar的base_link設定在車子的正中心，然後
        pyncar共有四個輪子，分別有四個：左前輪 左後輪 右前輪 右後輪，預設他們的origin：
        左前輪：base_link的y軸正方向(左)移動1/2個機殼y方向長度，其x正方向移動1/4個機殼x方向長度
        左後輪：base_link的y軸正方向(左)移動1/2個機殼y方向長度，其x負方向移動1/4個機殼x方向長度
        右前輪：base_link的y軸負方向(右)移動1/2個機殼y方向長度，其x正方向移動1/4個機殼x方向長度
        右後輪：base_link的y軸負方向(右)移動1/2個機殼y方向長度，其x負方向移動1/4個機殼x方向長度
        <xacro:property name="chassis_size_x" value="0.5"/>
        <xacro:property name="chassis_size_y" value="0.3"/>
        <xacro:property name="chassis_size_z" value="0.2"/>
        輪子的長度、半徑未知，仍須測量
    -->
    <xacro:property name="wheel_radius" value="0.05"/>
    <xacro:property name="wheel_length" value="0.04"/>
    <xacro:property name="wheel_mass" value="0.6"/>
    <!--======================================================================= -->

    <!-- LEFT FRONT WHEEL LINK -->
    <xacro:mecanum_wheel 
        side="left_front"
        radius="${wheel_radius}" 
        width="${wheel_length}" 
        pos_x="${chassis_size_x/4}" 
        pos_y="${chassis_size_y/2}" 
        pos_z="0" 
        mass="${wheel_mass}"
    />

<!--
    <joint name="left_front_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_front_wheel"/>
        
        
        <origin xyz = "${chassis_size_x/4} ${chassis_size_y/2} 0" rpy="-${pi/2} 0 0"/> 
        
        <axis xyz="0 0 1"/>
    </joint>
-->
    <!-- LEFT FRONT WHEEL LINK -->
<!--
    <link name="left_front_wheel">
        <visual>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" radius = "${wheel_radius}" length = "${wheel_length}">
            <origin xyz="0 0 0" rpy = "0 0 0" />
        </xacro:inertial_cylinder>
    </link>
-->
    <gazebo reference="left_front_wheel_link">
        <material>
            Gazebo/Black
        </material>
    </gazebo>



    <!-- LEFT BACK WHEEL LINK -->
    <xacro:mecanum_wheel 
        side="left_back"
        radius="${wheel_radius}" 
        width="${wheel_length}" 
        pos_x="-${chassis_size_x/4}" 
        pos_y="${chassis_size_y/2}" 
        pos_z="0" 
        mass="${wheel_mass}"
    />
    
<!--
    <joint name="left_back_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_back_wheel"/>
        <origin xyz = "-${chassis_size_x/4} ${chassis_size_y/2} 0" rpy="-${pi/2} 0 0"/> 
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_back_wheel">
        <visual>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" radius = "${wheel_radius}" length = "${wheel_length}">
            <origin xyz="0 0 0" rpy = "0 0 0" />
        </xacro:inertial_cylinder>
    </link>
-->
    <gazebo reference="left_back_wheel_link">
        <material>
            Gazebo/Black
        </material>
    </gazebo>

    <!-- RIGHT FRONT WHEEL LINK -->
    <xacro:mecanum_wheel 
        side="right_front"
        radius="${wheel_radius}" 
        width="${wheel_length}" 
        pos_x="${chassis_size_x/4}" 
        pos_y="-${chassis_size_y/2}" 
        pos_z="0" 
        mass="${wheel_mass}"
    />
<!--
    <joint name="right_front_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_front_wheel"/>
        <origin xyz = "${chassis_size_x/4} -${chassis_size_y/2} 0" rpy="${pi/2} 0 0"/> 
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_front_wheel">
        <visual>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" radius = "${wheel_radius}" length = "${wheel_length}">
            <origin xyz="0 0 0" rpy = "0 0 0" />
        </xacro:inertial_cylinder>
    </link>
-->
    <gazebo reference="right_front_wheel_link">
        <material>
            Gazebo/Black
        </material>
    </gazebo>


    <!-- RIGHT BACK WHEEL LINK -->
    <xacro:mecanum_wheel 
        side="right_back"
        radius="${wheel_radius}" 
        width="${wheel_length}" 
        pos_x="-${chassis_size_x/4}" 
        pos_y="-${chassis_size_y/2}" 
        pos_z="0" 
        mass="${wheel_mass}"
    />
<!--
    <joint name="right_back_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_back_wheel"/>
        <origin xyz = "-${chassis_size_x/4} -${chassis_size_y/2} 0" rpy="${pi/2} 0 0"/> 
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_back_wheel">
        <visual>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius = "${wheel_radius}" length = "${wheel_length}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" radius = "${wheel_radius}" length = "${wheel_length}">
            <origin xyz="0 0 0" rpy = "0 0 0" />
        </xacro:inertial_cylinder>
    </link>
-->
    <gazebo reference="right_back_wheel_link">
        <material>
            Gazebo/Black
        </material>
    </gazebo>

    <!-- cat head link-->
    <joint name="cat_head_link_joint" type="fixed">
        <parent link="base_link"/>
        <child link="cat_head_link"/>
        <origin xyz="0.25 0 0.03" rpy = "0 ${pi/2} 0"/>

    </joint>

    <link name="cat_head_link">
        <visual>
            <geometry>
                <cylinder radius = "0.06" length = "0.01"/>
            </geometry>
            <material name="blue"/>
        </visual>    
        <collision>
            <geometry>
                <cylinder radius = "0.06" length = "0.01"/>
            </geometry>
        </collision>    
        <xacro:inertial_cylinder mass="0.1" radius = "0.06" length = "0.01">
            <origin xyz="0 0 0" rpy = "0 0 0" />
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="cat_head_link">
        <material>
            Gazebo/Blue
        </material>
    </gazebo>

    <!--sensor-->
    <!--lidar-->

    <xacro:lidar
    joint_xyz = "-0.1 0 ${chassis_size_z + 0.02}" 
    joint_rpy = "0 0 0"
    radius = "0.05"
    length = "0.04"
    color = "red"
    mass = "0.1"
    />
</robot>